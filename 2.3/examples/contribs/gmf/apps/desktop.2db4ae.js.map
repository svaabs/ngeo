{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/rule/Rule.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/datasource/OGC.js","webpack:///./src/utils.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/message/Message.js","webpack:///./src/CustomEvent.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./src/query/MapQuerent.js","webpack:///./src/misc/EventHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/filters.js","webpack:///./src/misc/decorate.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/statemanager/Location.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/print/Utils.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/search/searchDirective.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/desktop/Controller.js","webpack:///./contribs/gmf/apps/desktop/contextualdata.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/permalink/crosshair.svg","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","assert","condition","opt_message","var_args","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","assertInstanceof","type","assertObjectPrototypeIsIntact","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","this","addBlankBackgroundLayer_","addBlankBackgroundLayer","undefined","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","olBase","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","olArray","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","getIds","item","array","forEach","child","callback","layer","set","metadata","dimensions","ids","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","googAsserts","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","opt_params","STYLES","styles","_iterator","entries","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_ref","key","createBasicWMSLayer","layers","credential","fail","layerGroupCreationFn","orderedChildren","map","x","reverse","promises","all","collection","filter","olCollection","createBasicGroup","promiseSuccessFn","background_layers","itemType","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","config","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeoMapLayerHelper","service","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","olEvents","_createClass","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","DATALAYERGROUP_NAME","EXTERNALLAYERGROUP_NAME","COORDINATES_LAYER_NAME","PermalinkParam","BG_LAYER","BG_LAYER_OPACITY","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","_inherits","_ngeoDatasourceDataSo","_possibleConstructorReturn","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","ogcLayer","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","maxRes","minRes","inMinRange","inMaxRange","inRange","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeoFormatAttributeType","share","myActive","activeDimensions","itsActive","time","range","lower","upper","end","start","timeRangeValue","supportsOGCQueries","_iterator5","_isArray5","_i5","_ref5","ngeoDatasourceDataSource","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","toMulti","geometry","multiGeom","olGeomPoint","olGeomMultiPoint","appendPoint","olGeomLineString","olGeomMultiLineString","appendLineString","olGeomPolygon","olGeomMultiPolygon","appendPolygon","isSafari","navigator","userAgent","indexOf","colorZeroPadding","hex","rgbArrayToHex","rgb","g","b","Error","hexR","toString","hexG","hexB","decodeQueryString","queryString","queryData","pairs","substring","split","pair","indexOfEquals","decodeURIComponent","encodeQueryString","queryItem","encodeURIComponent","deleteCondition","event","olEventsCondition","extentToRectangle","extent","getTopLeft","getTopRight","getBottomRight","getBottomLeft","mousedown","document","addEventListener","evt","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","filterName","projection_","download_","setProjection","projection","setStyle","feature","opt_select","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","getType","style","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","olStyleStyle","stroke","olStyleStroke","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","olStyleCircle","radius","fill","olStyleFill","font_size","point_to_px","offsetY","optNumber","attrib","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeoFormatFeatureProperties","line","getRadiusLine","ngeoInteractionMeasure","getFormattedLength","angle","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","olStyleRegularShape","points","innerMultiCoordinates","multiCoordinates","coordinates","getCoordinates","concat","supported","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","olColor","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","mimeType","fileName","export_","olFormatKML","opt_mimeType","clones","clone","olFeature","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","olStyleText","measure","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","view","getView","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","olExtent","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","toolContext","activePropertyName","getActive","setActive","newVal","showMessage","show","msgObjects","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObject","defaultType","msg","detail","olEventsEvent","_ngeoRuleRule","featureProperties","feature_","format_","olFormatGeoJSON","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","target","olGeomGeometry","readGeometry","setGeometry","ngeoRuleRule","featureUidToGroupIndex_","groups_","source_","olSourceVector","useSpatialIndex","layer_","olLayerVector","source","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","olObj","getLayer","getFeatureOverlay","styleFunction","olStyleDefaultFunction","ngeoMapFeatureOverlay","init","setMap","defaultFunction","toStyleFunction","resolution","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","opt_customSourceOptions","opt_customLayerOptions","FORMAT","LAYERS","olServerType","replace","assign","serverType","crossOrigin","olSourceImageWMS","updateParams","layerOptions","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","opt_customOptions","parser","olFormatWMTSCapabilities","preload","read","optionsFromCapabilities","olSourceWMTS","updateDimensions","setSource","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","OlLayerGroup","setLayers","getGroupFromMap","groupName","groups","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","sublayers","hasGroupLayer","sublayer","getFlatLayers_","computedOpacity","getOpacity","getLayerByName","found","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","round","olUri","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerGroupLayers","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","Visitor","traverseDepthFirst","visitor","decision","stop","controller","olInteractionInteraction","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","area","abs","olSphere","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","olProj","c2","point","opt_template","dragging","helpMsg","olDom","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","cancelEventKey_","body","handleEscapeKeyDown_","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","olOverlay","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","escPressed","keyCode","$inject","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","bboxAsGETParam_","bboxAsGETParam","dataSourceNames_","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","Number","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeoDatasourceDataSources","ngeoDatasourceHelper","ngeoQueryQuerent","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeoMessageMessage","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeoMessageNotification","ngeoStatemanagerService","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","secondResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","Scalify","numberFilter","filterFn","scale","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","olMath","dms","olString","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","removeCDATA","interaction","olLayerBase","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","decrementLoadCount_","decrement_","on","olEvent","newLayer","olSourceTile","olSourceImage","$applyAsync","load_count","NOT","OR","Text_inherits","Text_classCallCheck","Text_possibleConstructorReturn","ngeoFeatureHelper","ngeoWMSTime","RuleHelper_classCallCheck","ngeoFeatureHelper_","ngeoWMSTime_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","ngeoRuleDate","ngeoRuleGeometry","ngeoRuleSelect","choices","ngeoRuleText","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializedRule","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","olFormatFilter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","writeFilter","xmlSerializer","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","selectedChoices","selectedChoice","numericExpression","stringExpression","String","field","momentEnd","subtract","startValue","ngeoMiscFeatureHelper","ngeoMiscWMSTime","featuresCollection_","wrapX","FileGroup_inherits","_ngeoDatasourceGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","injector","unregister_","addDataSource","ngeoDatasourceFile","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","ngeoDatasourceGroup","OGCGroup_inherits","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_createClass","WMSGroup_inherits","_ngeoDatasourceOGCGro","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGC","updateLayer_","unregister","WMSGroup_createClass","ngeoDatasourceOGCGroup","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","ngeoDatasourceFileGroup","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","imagePngType","includes","infoFormats","ngeoDatasourceWMSGroup","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","isEmpty","fit","rejections","content","readOptions","getProjection","isKml","extractStyles","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","ngeoMiscFile","collection_","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","olView","syncDataSourceToResolution_","supportsDynamicInRange","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","inAMixedGroup","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","gmfEditingEditFeature","gmfEditingSnapping","gmfEditingXSDAttributes","ngeoEditingAttributesComponent","ngeoEditingCreatefeatureComponent","ngeoMessageModalComponent","ngeoMiscBtnComponent","ngeoMiscEventHelper","ngeoMiscToolActivateMgr","run","$templateCache","put","require","component_","scope","dirty","editableTreeCtrl","vectorLayer","closeAfterSave","bindToController","templateUrl","directive","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","scope_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeoMiscToolActivate","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","modify_","modifyToolActivate","menu_","ngeoMenu","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","DateFormatter","getFeaturesCollection","gmfLayertreeSyncLayertreeMap","olInteractionModify","ngeoUtils","ngeoInteractionRotate","ngeoInteractionTranslate","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","handleFeatureAdd_","handleMapSelectActiveChange_","newValue","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","refresh","close","checkForModifications_","scopeApply","$apply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","mask","geomAttr","ngeoFormatXSDAttribute","getGeometryAttribute","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","registerTool","unregisterTool","mapDiv","getViewport","handleMapClick_","handleMapContextMenu_","interactions","getInteractions","activeInteraction","pixel","forEachFeatureAtPixel","ret","hitTolerance","buffer","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","open","preventDefault","stopPropagation","_this10","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","updateCurrentTheme","fallbackThemeName","fallbackTheme","$emit","EventType","THEME_NAME_SET","gmfLayertreeTreeManager","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","choices_","factory_","func","wait","invokeApply","timeout","_len","_key","context","later","factory","tool","opt_defaultActivate","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterGroup","activateTool","deactivateTool","hasActiveTool","btnGroupComponent_","$parse","restrict","link","attrs","buttons_","buttonModel","BtnGroupController","activate","expressionFn","addButton","btnComponent_","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","getDefaultDrawStyleFunction","createEditingStyle","getDefaultModifyStyleFunction","_olEventsEventTarget","authenticationBaseUrl","gmfUser","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","respData","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","setUser_","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","olInteractionPointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","ngeoInteractionCommon","downPx","clickPx","dx","dy","squaredDistance","pass","handlePointerMove_","startDrawing_","finishDrawing_","mapBrowserEvent","pointerHandleEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","olGeomCircle","olGeomGeometryCollection","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","olFunctions","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","getGeometries","olProjProjection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","directive_","ngeoPopupTemplateUrl","addClass","css","$compile","$new","autoDestroy_","sce_","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","ngeoMessagePopupComponent","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","olFormatXML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeoFormatAttribute","setGeometryType","setAttributeByXsdType_","enumerations","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","otherState","INDETERMINATE","complexTypeElements","readFromComplexTypeElement_","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","complexType","complexContent","ngeoFormatWFSAttribute","olXml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","extension","sequence","ngeoRuleHelper","http_","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","supportsAttributes","ogcLayerNames","TYPENAME","ngeoWFSDescribeFeatureType","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","olFormatWMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","combinedHash","hash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","bbox","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","meta","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","ogcDS","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","ngeoFilterRuleHelper","mapViewChangePromise_","ngeoSnappingSource_","CustomSnap","_olInteractionSnap","olInteractionSnap","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","firstTreeCtrl","firstNode","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","refreshSnappingSource_","loadAllItems_","extend","Cache","CacheItem","WFSConfig","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","centerFeatures_","olInteractionTranslate","handleKeyUp_","setState_","currentMap","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","elem","getTargetElement","cursor","removeFeature_","getGeometryCenterPoint_","centerFeature","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","handleDown_","handleDragEvent","handleDrag_","handleUp_","getCenterCoordinate_","willModifyFeatures_","f","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","a1","rotate","menuOptions","opt_overlayOptions","olOverlayPositioning","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","locationMock","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","download","opt_fileType","fileType","blob","Blob","saveAs","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","$postLink","attr","dialog","draggable","handle","modal","e","$onDestroy","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","DAY","HOUR","_compare","str1","str2","toLowerCase","_lpad","char","chr","_extend","_typeof","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","self","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","vPattern","vDigit","iPart","iSec","vYear","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","str","exec","I","UTC","O","tzo","P","T","Z","U","BACKSLASH","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","short_url","status","postShortUrl_","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","getScale","opt_rotation","frameState","viewState","viewportWidth","pixelRatio","viewportHeight","olHas","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZone_","drawPrintZoneWithRotation_","fillStyle","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","y1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","optimalResolution","max","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","epsg21781def","somerc","epsg21781extent","proj4","defs","olProjProj4","setExtent","modifierPressed","br","olInteractionDraw","geometryFunction","linestringGeometryFunction","opt_geometry","viewRotation","getRotation","from","to","distance","delta","layerSource","featuresInExtent","lastIntersection","bestIntersection","bestDistance","distanceFromTo","ax","ay","mx","my","unitVector","forEachSegment","point1","point2","computeLineSegmentIntersection","containsXY","lastDistance","proj","line1vertex1","line1vertex2","line2vertex1","line2vertex2","numerator1A","numerator1B","denominator1","ua1","ub1","verticesCount","gmfAuthenticationService","gmfAuthenticationTemplateUrl_","gmfAuthenticationTemplateUrl","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","infoMessage","AuthenticationController_","gmfAuthenticationService_","notification_","changingPassword","userMustChangeItsPassword","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","catch","resetError_","resetPasswordSuccessFn","messageType","gmfAuthenticationComponent","olObservable","mapUids_","mapUid","BACKGROUNDLAYERGROUP_NAME","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","hasUpdates","updatedDimensions","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","gmfEditingEnumerateAttribute","_ngeoDatasourceOGC","OGC_classCallCheck","gmfLayer_","OGC_createClass","WFSAliases_classCallCheck","describe","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","handleDimensionsChange_","layerIds","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","cacheItem","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","queryLayers","wmsLayers","childLayer","isSingleTile","dimensionsFilters","identifierAttributeField","timeAttribute","gmfDatasourceOGC","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","treeDataSource","_source$updateParams","layersParam","layersList","filterParam","hasFilter","wmsLayerName","dsLayer","currentTimeParam","previousBackgroundLayer","currentBackgroundLayer","gmfDatasourceWFSAliases","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfDatasourceHelper","gmfDatasourceManager","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","showInPopup","popup","button","ngeoMessagePopup","ngeoMessageDisclaimer","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","registerLayer_","handleLayersAdd_","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","ngeoDrawComponent","ngeoMiscDatepickerComponent","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","drawnFeatures","selectedFeatures","ngeoInteractionModify","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","drawnFeature","getRuleGeometryType","removeMenu_","ngeoFilterRuleComponent","ngeoQueryMapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","ngeoMapFeatureOverlayMgr","ngeoFilterComponent","gmfFiltersSavedFilters","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","gmfFiltersFilterselectorComponent","pre","preLink","sliderOptions","onSliderReleased_","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","isModeRange","timeValueList","getTimeValueList_","initialOptions_","maxNbValues","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","getLocalizedDate","gmfLayertreeComponent","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeTimeSliderComponent","gmfPermalinkPermalink","gmfPermalinkShareService","gmfPermalinkShareComponent","prop","olMap","setTarget","manageResizeAttr","manageResizeProp","manageResize","resizeTransitionAttr","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","ngeoMapComponent","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","gmfPermalinkModule","ngeoMapModule","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","formatFn","filterAndArgs","olControlMousePosition","className","coordinateFormat","undefinedHTML","addControl","code","gmfMapComponent","gmfMapMousepositionComponent","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","isSelected","selectAll","unselectAll","rowId","invertSelection","ngeoGridConfig","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","targetUid","posClickedRow","posSelectedRows","currentRow","currentUid","posClosestRow","currentPos","currentDistance","rangeStart","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","ngeoDownloadCsv","ngeoGridComponent","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSource","getMergedSource_","mergedSourceId","mergeSourceId","currentMergeSourceId","sourceLabels","containsSource","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","gridCreated","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","columns","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","maxZoom","downloadCsv","startDownload","MOVE_BUFFER_RADIUS","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","events","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","validSwipe","deltaY","deltaX","isDefined","triggerHandler","$event","ngeoMiscSwipe","$animateProvider","classNameFilter","gmfDisplayquerywindowTemplateUrl","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","windowContainer","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","positionMax","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","gmfQueryGridComponent","gmfQueryWindowComponent","gmfSearchComponent","gmfSearchFulltextSearch","gmfThemeManager","gmfThemeSelectorTemplateUrl","setThemes_","setTheme","gmfThemeSelectorComponent","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","updateContentTemplate_","compiled","displayWindow","empty","clear_","displaywindowComponent_createClass","trustAsResourceUrl","control","olControlControl","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","supportedLanguages","ngeoMiscAutoProjection","ngeoMiscControlComponent","ngeoMiscDebounce","ngeoMiscFilereaderComponent","ngeoMiscGetBrowserLanguage","ngeoMiscSortableComponent","clickEventKey_","pointerMoveEventKey_","sourceids","hit","forEachLayerAtPixel","activate_","cursorHover","deactivate_","WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","filters","createFilters_","filterGroups","issueRequest_","showFeatures","padding","getExtent_","resultSource","reduce","createFiltersForGroup","filterGroup","filterDef","or_","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","permalink_","gmfAuthentication","updateHasEditableLayers_","loginRedirectUrl","loginInfoMessage","loginActive","unbind","userChange","roleId","filterSelectorEnabled","open_panel","filterSelectorActive","previousThemeName","defaultThemeNameFromFunctionalities","setDefaultBackground_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","getBrowserLanguage","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapTools","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","getLocationIcon","arrow","arrowWrapper","gmfAuthenticationModule","gmfBackgroundlayerselectorComponent","gmfDatasourceModule","gmfDisclaimerComponent","gmfFiltersModule","gmfLayertreeModule","gmfMapModule","gmfQueryExtraModule","gmfSearchModule","gmfThemeModule","ngeoMessageDisplaywindowComponent","ngeoMiscExtraModule","ngeoQueryMapQueryComponent","ngeoStatemanagerModule","ngeoStatemanagerWfsPermalink","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","olStructsRBush","snappedToVertex_","dragSegments_","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","olCoordinate","fromCircle","setGeometryCoordinates_","olMapBrowserPointerEvent","handled","getInteracting","handlingDownUpSequence","pixelCoordinate","sortByDistance","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyParams","otherFeatures_","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","getFeatureCollection_","isCircle","isRectangle","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","interaction_","registerInteraction","handleActiveChange","getUid","listen","handleDrawEnd","sketch","ngeoDrawFeatures","drawFeatureCtrl","maxPoints","ngeoDrawController","contMsg","ngeoInteractionMeasureArea","ngeoInteractionMeasureLength","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","gmfLayersUrl","promises_","handleGetAttributes_","getFeaturesWithComparisonFilters","layerId","geoJSON","writeFeature","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","Proj","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","query","queryParams","Promise","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleIcon","src","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","stateName","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","enabled3d","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","getBackgroundLayerOpacity","opacity_","refreshFirstLevelGroups","groupNodes","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","initialUri","href","authenticationRequired","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","numGroups","WFS","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","serviceType","getCapabilitiesDefer","_ret","responses","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this9$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","OpenLayersLayerProperties","regexp","key1","key2","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","geomRegex","promiseId","handleGetAttributeValues_","isValidFileSize","fileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","load","opt_cancelP","viewConfig","mapViewConfig","gmfControllersAbstractAppController","mapPixelRatio","controls","mapControls","olControlScaleLine","getElementById","olControlZoom","zoomInTipLabel","zoomOutTipLabel","olControlRotate","tipLabel","mapInteractions","olInteraction","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","editFeatureActivate","googleStreetViewActivate","scaleSelectorOptions","profileLine","gmfContextualdataModule","gmfDrawingModule","gmfEditingModule","gmfPrintComponent","gmfProfileModule","gmfRasterComponent","ngeoQueryBboxQueryComponent","gmfImportModule","gmfRasterRasterService","gmfRaster","$compile_","gmfRaster_","gmfContextualdataOptions_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","getRasterSuccess","getRasterError","rasterParams","setAttribute","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","gmfContextualdataComponent","gmfEditingEditFeatureComponent","selectedEditableTreeCtrl","updateEditableTreeCtrls","editables","editableTreeCtrls","treeCtrlsWatcherUnregister_","stopEditing","gmfEditingEditFeatureSelectorComponent","geojsonFormat","PrintStyleType","PrintStyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","getStyleFunction","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","geometryType","featureStyleProp","styleId","encodeVectorStyle","geojsonFeatureCollection","geoJson","styleType","styleObject","symbolizers","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","getColor","encodeVectorStyleStroke","URL","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","getWidth","strokeLineCap","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontStyle","getFont","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","fillColorRgba","labelXOffset","getOffsetX","labelYOffset","getOffsetY","vectorEncoder","ngeoPrintVectorEncoder","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","spec","viewCenter","viewResolution","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","getOpacityOrInherited_","useNativeAngle","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","olTilegridWMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","olSize","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","opt_options","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","ngeoFormatFeatureHashStyleType","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","encodedStyles","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","fillColorHex","strokeColorHex","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","part","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","ngeoMiscColorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","currentColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","gmfDrawingFeatureStyleComponent","ngeoEditingExportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","handleCancelKeyEvent_","setTimeout","clearTimeout","gmfDrawingDrawFeatureComponent","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","createAndAddDataSource","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","gmfImportWmsCapabilityLayertreeComponent","gmfImportWmtsCapabilityLayertreeComponent","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","startWorking_","stopWorking_","opt_hasError","nameAndSize","gmfImportImportdatasourceComponent","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadDatasets","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","datasetsempty","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","Function","sourceProjection","ngeoProjEPSG21781","parseBbox","regex","removeHtmlTags","extractName","origins","results","geom_st_box2d","bhOptions","ngeoSearchSearchDirective","ngeoSearchCreateGeoJSONBloodhound","ngeoSearchCreateLocationSearchBloodhound","d3","bisector","axisBottom","axisLeft","scaleLinear","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","every","isFinite","transition","yHover","defined","tickFormat","tickValues","ticks","tickSize","mouseout","mousemove","mouseX","x0","invert","clearHighlight","elevation","elevations","elevationsRef","lineName","xtranslate","yUnits","showPois","pois","pe","profileData","ps","poiEnterG","exit","optionsAttr","elevationData","poiData","origHoverCallback","origOutCallback","ngeoProfileD3Elevation","refreshData","ngeoProfileElevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","lineConfig","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","eventToLine","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","firstPoint","lastPoint","getTooltipHTML_","separator","elevationName","translatedElevationName","DistDecimal","int_value","lineConfiguration","getLayersNames","getZFn","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","getStyleFn","overlay","styleFn","gmfProfileComponent","gmfProfileDrawLineComponent","olInteractionDragBox","handleBoxEnd","gmfElevationwidgetTemplateUrl","layersconfig","loading","toggleActive_","filter_","layersConfig","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","custom_args","widgetComponent_","WidgetController_","selectedElevationLayer","LayerConfig","ngeoPrintService","ngeoPrintUtils","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","gmfPrintTemplateUrl","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","optionsLegendType","optionsType","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","gmfLegendOptions_","useBbox","legend","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","updateRotation_","togglePrintPanel_","print","currentThemes","getSizeFn","getRotationFn","getScaleFn","getOptimalScale_","getCapabilities_","parseCapabilities_","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","dpis","rawType","simpleAttributes","previousAttributes","default","p0x","p0y","p1x","p1y","centerToP0","centerToP1","sense","boost","increment","$digest","getDataSource_","getLegend_","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","setLayerGroup","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","datasourceArr","tanslateColumns","table","mfResp","getStatus_","handleGetStatusSuccess_","classes","icons","getMetadataLegendImage_","serverType_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","handleDrawEnd_","fromJson","ngeoMiscDatetimepickerComponent","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","parentElement","sortable","resetUpDragDrop","optionsObject","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","defaultHandleClassName","handleClassName","ngeoPopoverCtrl","anchorElm","popover","bodyElm","shown","placement","dismissPopover","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoSearchModule","ngeoMessagePopoverComponent","gmfSearchTemplateUrl_","gmfSearchTemplateUrl","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","bloodhoundEngine","createAndInitBloodhound_","typeaheadDataset","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","initialize","rateLimitWait","xhrFields","suggestions","tt_source","radius2","customStyles","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","fitOptions","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeoLayertreeTemplateUrl","__webpack_exports__","originalEl","closeEl_","contentEl_","one","ngeoLayertreeComponent","subTemplateUrl","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","gmfSyncLayertreeMap_","groupNodeStates_","ngeoMiscSyncArrays","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","mpu","displayMetadata","metadataURL","afterReorder","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","$compileProvider","debugInfoEnabled","epsg2056def","epsg2056extent","gmfControllersAbstractDesktopController","resolutions","searchCoordinatesProjections","ngeoProjEPSG2056","scaleSelectorValues","elevationLayers","elevationLayersConfig","profileLinesconfiguration","aster","srtm","srtm-partial","mousePositionProjections","raven","Raven","addPlugin","RavenPluginsAngular","install","appBase"],"mappings":"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","file":"desktop.2db4ae.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([363,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n\n      // Manage WMS styles\n      const opt_params = {STYLES: gmfLayerWMS.styles};\n      if (gmfLayer.dimensions) {\n        for (const [key, value] of Object.entries(gmfLayer.dimensions)) {\n          opt_params[key] = value;\n        }\n      }\n\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        opt_params,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  BG_LAYER_OPACITY: 'baselayer_opacity',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport {getTopLeft, getTopRight, getBottomLeft, getBottomRight} from 'ol/extent.js';\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n/**\n * Takes an ol.Extent and return an Array of ol.Coordinate representing a rectangle polygon.\n * @param {ol.Extent} extent The extent.\n * @return {Array.<ol.Coordinate>} The Array of coordinate of the rectangle.\n */\nexport function extentToRectangle(extent) {\n  return [\n    getTopLeft(extent),\n    getTopRight(extent),\n    getBottomRight(extent),\n    getBottomLeft(extent),\n    getTopLeft(extent),\n  ];\n}\n\n/**\n * Active states.\n */\nexport const active = {\n  mousedown: false\n};\n\ndocument.addEventListener('mousedown', (evt) => {\n  active.mousedown = true;\n});\n\ndocument.addEventListener('mouseup', (evt) => {\n  active.mousedown = false;\n});\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customSourceOptions Some initial options.\n * @param {Object=} opt_customLayerOptions The layer opacity.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin,\n  opt_customSourceOptions, opt_customLayerOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customSourceOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  const layerOptions = Object.assign({}, opt_customLayerOptions, {source});\n  return new olLayerImage(layerOptions);\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport {active} from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.cancelEventKey_ = olEvents.listen(document.body, 'keydown', (event) => {\n    this.handleEscapeKeyDown_(event);\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    olEvents.unlistenByKey(this.cancelEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n    this.cancelEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\n/**\n * Called when escape key is pressed to reset drawing.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @private\n * @export\n */\nexports.prototype.handleEscapeKeyDown_ = function(event) {\n  const escPressed = event.keyCode === 27; // Escape key\n  if (!active.mousedown && this.drawInteraction_.getActive() && escPressed) {\n    this.drawInteraction_.setActive(false);\n    this.drawInteraction_.setActive(true);\n  }\n};\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.bboxAsGETParam_ = options.bboxAsGETParam || false;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_,\n      bboxAsGETParam: this.bboxAsGETParam_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n  let secondResolution = undefined;\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n    secondResolution = gettextCatalog.getString('M/d/yyyy HH:MM:ss');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    case 'second':\n      if (secondResolution) {\n        return this.$filter_('date')(date, secondResolution, utc);\n      } else {\n        return date.toISOString().replace(/\\.\\d{3}/, '');\n      }\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <!-- With en-US localization -->\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *      <br/>\n *      <!-- With en-US localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\n/**\n * A filter used to remove the CDATA prefix and postfix.\n *\n * @return {function(string): string} Retult string\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nconst removeCDATA = function() {\n  return function(input) {\n    if (input) {\n      return input.replace(/<!\\[CDATA\\[(.*)\\]\\]>/, '$1');\n    }\n  };\n};\n\nexports.filter('removeCDATA', removeCDATA);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(null, [mainFilter, dimensionsFilter]);\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        endValue = beginValue;\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(expression)\n          .add(30, 'years')\n          .format('YYYY-MM-DD');\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(expression)\n          .format('YYYY-MM-DD');\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).utc().format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.utc().format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GPX. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    url = service['OnlineResource'] || url;\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML({extractStyles: false}).readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    const styles = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n        const style = (treeCtrl.node.style !== undefined) ? treeCtrl.node.style : '';\n        styles.push(style);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(','),\n      'STYLES': styles.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n\n    const opt_params = {STYLES: gmfLayerWMS.style};\n\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      opt_params, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils, {active} from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *         gmf-editfeature-closeaftersave=\"::ctrl.closeaftersave\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @htmlAttribute {boolean} gmf-editfeatureselector-closeaftersave If true,\n *     immediately return to the main edit panel after save. Default is false.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector',\n      'closeAfterSave': '=?gmfEditfeatureCloseaftersave'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.closeAfterSave = false;\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n      this.gmfSnapping_.refresh();\n      if (this.closeAfterSave) {\n        this.cancel();\n      }\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const interactions = evt.target.getInteractions().getArray();\n  const activeInteraction = interactions.find(interaction => interaction.getActive() === true);\n\n  if (this.cancelEventKey_ === undefined) {\n    this.cancelEventKey_ = olEvents.listen(document.body, 'keydown', (event) => {\n      const escPressed = event.keyCode === 27; // Escape key\n      if (!active.mousedown && escPressed && activeInteraction.getActive()) {\n        this.cancel();\n        this.scope_.$apply();\n\n        olEvents.unlistenByKey(this.cancelEventKey_);\n        this.cancelEventKey_ = undefined;\n      }\n    });\n  }\n\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n  olEvents.unlistenByKey(this.cancelEventKey_);\n  this.cancelEventKey_ = undefined;\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n\n/**\n * @param {string} themeName wanted theme name.\n * @param {string} fallbackThemeName fallback theme name.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @export\n */\nexports.prototype.updateCurrentTheme = function(themeName, fallbackThemeName, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    if (!themeName && this.modeFlush) {\n      // In flush mode load current theme private groups\n      const fallbackTheme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (fallbackThemeName));\n      if (fallbackTheme) {\n        this.gmfTreeManager_.addFirstLevelGroups(fallbackTheme.children, false, opt_silent);\n      }\n    }\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.addTheme(theme, true);\n      }\n    } else {\n      this.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n    }));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      if (options.bboxAsGETParam && bbox) {\n        params['bbox'] = bbox.join(',');\n      }\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {!angular.$injector} $injector Angular injector.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $injector, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angular.$injector}\n   * @private\n   */\n  this.injector_ = $injector;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  /**\n   * @type {ol.source.Vector | undefined}\n   * @private\n   */\n  this.ngeoSnappingSource_ = this.injector_.has('ngeoSnappingSource') ? this.injector_.get('ngeoSnappingSource') : undefined;\n\n};\n\n\nclass CustomSnap extends olInteractionSnap {\n  constructor(options) {\n    super(options);\n    document.body.addEventListener('keydown', (evt) => {\n      this.setActive(evt.keyCode !== 17); // Ctrl key\n    });\n    document.body.addEventListener('keyup', () => {\n      this.setActive(true);\n    });\n  }\n}\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * interacts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new CustomSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n  this.refreshSnappingSource_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n        this.refreshSnappingSource_();\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n/**\n * @private\n */\nexports.prototype.refreshSnappingSource_ = function() {\n  this.ngeoSnappingSource_.clear();\n  for (const uid in this.cache_) {\n    const item = this.cache_[uid];\n    if (item.active) {\n      this.ngeoSnappingSource_.addFeatures(item.features.getArray());\n    }\n  }\n};\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport {active} from 'ngeo/utils.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (!active.mousedown && evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport {active} from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (!active.mousedown && evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery';\nimport 'jquery-ui';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $postLink() {\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable({\n      'handle': '.modal-header'\n    });\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport {distance} from 'ol/coordinate.js';\nimport {containsXY} from 'ol/extent';\n\nlet modifierPressed = undefined;\n\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n  if (modifierPressed === undefined) {\n    modifierPressed = false;\n    document.body.addEventListener('keydown', (evt) => {\n      modifierPressed = evt.keyCode === 17; // Ctrl key\n    });\n    document.body.addEventListener('keyup', () => {\n      modifierPressed = false;\n    });\n  }\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n  /**\n   * The snapping tolerance in pixels.\n   * @params {number}\n   */\n  this.tolerance = options.tolerance;\n\n  /**\n   * The snapping source\n   * @params {ol.source.Vector}\n   */\n  this.source = options.source;\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    geometryFunction: this.linestringGeometryFunction.bind(this),\n    condition: () => true,\n    style: style,\n    source: source,\n  });\n};\n\n\n/**\n * Create a `linestringGeometryFunction` that will create a line string with segments\n * snapped to π/4 angle.\n * Use this with the draw interaction and `type: 'LineString'`.\n * @param {LineCoordType} coordinates Coordinates.\n * @param {LineString=} opt_geometry Geometry.\n * @return {LineString} Geometry.\n */\nexports.prototype.linestringGeometryFunction = function(coordinates, opt_geometry) {\n  if (modifierPressed) {\n    const viewRotation = this.getMap().getView().getRotation();\n    const angle = Math.PI / 4;\n    const from = coordinates[coordinates.length - 2];\n    const to = coordinates[coordinates.length - 1];\n    const dx = from[0] - to[0];\n    const dy = from[1] - to[1];\n    const length = distance(from, to);\n    const rotation = viewRotation + Math.round((Math.atan2(dy, dx) - viewRotation) / angle) * angle;\n\n    to[0] = from[0] - (length * Math.cos(rotation));\n    to[1] = from[1] - (length * Math.sin(rotation));\n\n    if (this.tolerance !== undefined && this.source !== undefined) {\n      const delta = this.getMap().getView().getResolution() * this.tolerance;\n      const bbox = [to[0] - delta, to[1] - delta, to[0] + delta, to[1] + delta];\n\n      const layerSource = this.source;\n      const featuresInExtent = layerSource.getFeaturesInExtent(bbox);\n      featuresInExtent.forEach((feature) => {\n\n        let lastIntersection = [];\n        let bestIntersection = [];\n        let bestDistance = Infinity;\n\n        // Line points are: from A to M (to B that we need to find)\n        const distanceFromTo = distance(from, to);\n        const ax = from[0];\n        const ay = from[1];\n        const mx = to[0];\n        const my = to[1];\n        const unitVector = [(mx - ax) / distanceFromTo, (my - ay) / distanceFromTo];\n        const b = [(ax + (distanceFromTo + delta) * unitVector[0]), (ay + (distanceFromTo + delta) * unitVector[1])];\n\n        feature.getGeometry().forEachSegment((point1, point2) => {\n          // intersection calculation\n          lastIntersection = this.computeLineSegmentIntersection(from, b, point1, point2);\n          if (lastIntersection !== undefined && containsXY(bbox, lastIntersection[0], lastIntersection[1])) {\n            const lastDistance = distance(to, lastIntersection);\n            if (lastDistance < bestDistance) {\n              bestDistance = lastDistance;\n              bestIntersection = lastIntersection;\n            }\n          }\n        });\n\n        if (bestIntersection) {\n          to[0] = bestIntersection[0] || to[0];\n          to[1] = bestIntersection[1] || to[1];\n        }\n      });\n    }\n  }\n\n  const geometry = opt_geometry;\n  if (geometry) {\n    geometry.setCoordinates(coordinates);\n    return geometry;\n  }\n  return new olGeomLineString(coordinates);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n/**\n * Compute the intersection between 2 segments\n *\n * @param {Number} line1vertex1 The coordinates of the first line's first vertex.\n * @param {Number} line1vertex2 The coordinates of the first line's second vertex.\n * @param {Number} line2vertex1 The coordinates of the second line's first vertex.\n * @param {Number} line2vertex2 The coordinates of the second line's second vertex.\n * @return {Array<number> | undefined} The intersection point, undefined if there is no intersection point or lines are coincident.\n */\nexports.prototype.computeLineSegmentIntersection = function(line1vertex1, line1vertex2, line2vertex1, line2vertex2) {\n  const numerator1A = (line2vertex2[0] - line2vertex1[0]) * (line1vertex1[1] - line2vertex1[1])\n    - (line2vertex2[1] - line2vertex1[1]) * (line1vertex1[0] - line2vertex1[0]);\n  const numerator1B = (line1vertex2[0] - line1vertex1[0]) * (line1vertex1[1] - line2vertex1[1])\n    - (line1vertex2[1] - line1vertex1[1]) * (line1vertex1[0] - line2vertex1[0]);\n  const denominator1 = (line2vertex2[1] - line2vertex1[1]) * (line1vertex2[0] - line1vertex1[0])\n    - (line2vertex2[0] - line2vertex1[0]) * (line1vertex2[1] - line1vertex1[1]);\n\n  // If denominator = 0, then lines are parallel. If denominator = 0 and both numerators are 0, then coincident\n  if (denominator1 === 0) {\n    return;\n  }\n\n  const ua1 = numerator1A / denominator1;\n  const  ub1 = numerator1B / denominator1;\n\n  if (ua1 >= 0 && ua1 <= 1 && ub1 >= 0 && ub1 <= 1) {\n    const result = [];\n    result[0] = line1vertex1[0] + ua1 * (line1vertex2[0] - line1vertex1[0]);\n    result[1] = line1vertex1[1] + ua1 * (line1vertex2[1] - line1vertex1[1]);\n    return result;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-info-message=\"mainCtrl.loginInfoMessage\"\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n * @htmlAttribute {string} gmf-authentication-info-message Message to show above the authentication form.\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange',\n    'infoMessage': '=?gmfAuthenticationInfoMessage'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.infoMessage = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.userMustChangeItsPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n    this.userMustChangeItsPassword = (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd)\n          .then(() => {\n            this.changePasswordReset();\n            this.setError_(\n              [gettextCatalog.getString('Your password has successfully been changed.')],\n              ngeoMessageMessage.Type.INFORMATION\n            );\n          })\n          .catch((err) => {\n            this.setError_(gettextCatalog.getString('Incorrect old password.'));\n          });\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @param {ngeoMessageMessage.Type} [messageType] Type.\n   * @private\n   */\n  setError_(errors, messageType) {\n    if (messageType == undefined) {\n      messageType = ngeoMessageMessage.Type.ERROR;\n    }\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: messageType\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n  const previous = bgGroup.getLayers().remove(this.getOpacityBgLayer(map));\n  const ZIndex = -100;\n  layer.setOpacity(previous ? previous.getOpacity() : 0);\n  layer.setVisible(previous ? previous.getVisible() : true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val !== undefined) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensionsFilters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    if (dataSource.gmfLayer == undefined) {\n      return;\n    }\n    const id = olBase.getUid(dataSource.gmfLayer);\n    if (id == undefined) {\n      return;\n    }\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(source instanceof olSourceImageWMS ||\n          source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (const wmsLayerName of layersList) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layer.get('querySourceIds').indexOf(dataSource.id) >= 0 &&\n            dataSource.gmfLayer.layers.split(',').indexOf(wmsLayerName) >= 0)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer === undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minDefValue = newVal || this.createDate_();\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minDefValue = newVal || this.createWeekAgoDate_();\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxDefValue = newVal || this.createDate_();\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_.bind(this));\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.open = false;\n        this.clear();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const windowContainer = this.element_.find('.gmf-displayquerywindow .windowcontainer');\n  if (this.desktop) {\n    windowContainer.draggable({\n      handle: '.header',\n      containment: this.draggableContainment\n    });\n    windowContainer.resizable({\n      minHeight: 240,\n      minWidth: 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      this.updateContentTemplate_();\n    }\n\n    this.scope_.$watch(\n      () => this.contentTemplate,\n      () => this.updateContentTemplate_()\n    );\n  }\n\n  /**\n   *  @private\n   */\n  updateContentTemplate_() {\n    const scope = googAsserts.assert(this.contentScope || this.scope_);\n    const compiled = this.compile_(this.contentTemplate)(scope);\n    const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container .content-template-container');\n    displayWindow.empty();\n    displayWindow.append(/** @type {?} */ (compiled));\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '=?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * Url to redirect to after login success.\n   * @type {?string}\n   */\n  this.loginRedirectUrl = null;\n\n  /**\n   * Information message for the login form.\n   * @type {?string}\n   */\n  this.loginInfoMessage = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.userMustChangeItsPassword = false;\n\n  $scope.$on('authenticationrequired', (event, args) => {\n    /** @type {angularGettext.Catalog} */\n    const gettextCatalog = $injector.get('gettextCatalog');\n    this.loginInfoMessage = gettextCatalog.getString(\n      'Some layers in this link are not accessible to unauthenticated users. ' +\n      'Please log in to see whole data.');\n    this.loginRedirectUrl = args.url;\n    this.loginActive = true;\n\n    const unbind = $scope.$watch(() => this.loginActive, () => {\n      if (!this.loginActive) {\n        this.loginInfoMessage = null;\n        this.loginRedirectUrl = null;\n        unbind();\n      }\n    });\n  });\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    if (this.loginRedirectUrl) {\n      window.location = this.loginRedirectUrl;\n      return;\n    }\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    const functionalities = this.gmfUser.functionalities;\n\n    // Enable filter tool in toolbar\n    if (functionalities &&\n        'filterable_layers' in functionalities &&\n        functionalities['filterable_layers'].length > 0) {\n      this.filterSelectorEnabled = true;\n    }\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n\n    // Reload themes and background layer when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n\n    if (evt.type !== 'ready') {\n      const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n      this.gmfThemeManager.updateCurrentTheme(themeName, previousThemeName, true);\n    }\n    this.setDefaultBackground_(null);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorEnabled = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n  $scope.$watch(\n    () => this.gmfUser.is_password_changed,\n    (value) => {\n      this.userMustChangeItsPassword = value === false;\n    }\n  );\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport {active} from 'ngeo/utils.js';\nimport olFeature from 'ol/Feature.js';\nimport {getUid} from 'ol/index.js';\nimport {listen} from 'ol/events.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoEventHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n};\n\n\n/**\n * Called when escape key is pressed to reset drawing.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleEscapeKeyDown_ = function(event) {\n  const escPressed = event.keyCode === 27; // Escape key\n  if (!active.mousedown && escPressed && this.interaction_.getActive()) {\n    const interaction = this.interaction_;\n    interaction.setActive(false);\n    interaction.setActive(true);\n  }\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n  this.interaction_ = this.interactions_.find(interaction => interaction.getActive() === true);\n  const uid = getUid(this);\n\n  if (this.interaction_) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      listen(\n        document.body,\n        'keydown',\n        this.handleEscapeKeyDown_,\n        this\n      )\n    );\n  } else {\n    this.ngeoEventHelper_.clearListenerKey(uid);\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n        tolerance: $injector.has('ngeoSnappingTolerance') ? $injector.get('ngeoSnappingTolerance') : undefined,\n        source: $injector.has('ngeoSnappingSource') ? $injector.get('ngeoSnappingSource') : undefined,\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {gmfx.User} gmfUser User.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation, gmfUser) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = gmfPermalinkOptions.pointRecenterZoom;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  /**\n   * @type {gmfx.User}\n   * @private\n   */\n  this.user_ = gmfUser;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleIcon({\n        src: require('gmf/permalink/crosshair.svg')\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this\n    );\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  const geom = typeof oeFeature !== 'undefined' && oeFeature !== null ? oeFeature.getGeometry() : undefined;\n  if (geom) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    let maxZoom;\n    if (geom instanceof olGeomPoint || geom instanceof olGeomMultiPoint) {\n      maxZoom = this.pointRecenterZoom_;\n    }\n    view.fit(geom.getExtent(), {\n      size,\n      maxZoom\n    });\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get the background layer opacity to use to initialize the map from the state manager.\n * @return {number} Opacity.\n */\nexports.prototype.getBackgroundLayerOpacity = function() {\n  const opacity_ = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.BG_LAYER_OPACITY);\n  return opacity_ === undefined ? undefined : opacity_ / 100;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n\n  const backgroundLayer = this.ngeoBackgroundLayerMgr_.getOpacityBgLayer(this.map_);\n  if (backgroundLayer) {\n    const opacity = this.getBackgroundLayerOpacity();\n    if (opacity !== undefined) {\n      backgroundLayer.setOpacity(opacity);\n    } else {\n      const opacity = backgroundLayer.getOpacity();\n      /** @type {Object<string, string>} */\n      const object = {};\n      object[gmfBase.PermalinkParam.BG_LAYER_OPACITY] = `${opacity * 100}`;\n      this.ngeoStateManager_.updateState(object);\n    }\n    olEvents.listen(\n      backgroundLayer,\n      'change:opacity',\n      () => {\n        const opacity = backgroundLayer.getOpacity();\n        /** @type {Object<string, string>} */\n        const object = {};\n        object[gmfBase.PermalinkParam.BG_LAYER_OPACITY] = `${opacity * 100}`;\n        this.ngeoStateManager_.updateState(object);\n      }\n    );\n  }\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  const initialUri = window.location.href;\n  let authenticationRequired = false;\n\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        } else {\n          authenticationRequired = true;\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        if (authenticationRequired && this.user_.role_id === null) {\n          this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n        }\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers == '' ? [] : groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                if (enable) {\n                  groupLayersArray.splice(groupLayersArray.indexOf(treeCtrl.node.name), 1);\n                }\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n            if (groupLayersArray.length > 0) {\n              authenticationRequired = true;\n            }\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n\n      if (authenticationRequired && this.user_.role_id === null) {\n        this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n      }\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoSnappingTolerance', 20);\nexports.module.value('ngeoSnappingSource', new olSourceVector());\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @param {angular.$injector} $injector Angular injector service.\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster, $injector) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.gmfContextualdataOptions_ = $injector.has('gmfContextualdataOptions') ?\n    $injector.get('gmfContextualdataOptions') : {};\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate, this.gmfContextualdataOptions_.rasterParams).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\"\n *         gmf-editfeatureselector-tree=\"ctrl.selectedEditableTreeCtrl\"\n *         gmf-editfeatureselector-closeaftersave=\"::true\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeatureselector-tree The\n *     layertree controller handling the selectable editable layers list.\n * @htmlAttribute {boolean} gmf-editfeatureselector-closeaftersave If true,\n *     immediately return to the main edit panel after save. Default is false.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector',\n      'selectedEditableTreeCtrl': '=?gmfEditfeatureselectorTree',\n      'closeAfterSave': '=?gmfEditfeatureselectorCloseaftersave'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.closeAfterSave;\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    const styleFunction = originalFeature.getStyleFunction() || layer.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(layer, originalFeature, resolution);\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = new URL(imageStyle.getSrc(), window.location.href).href;\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @protected\n   */\n  this.vectorEncoder = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  this.vectorEncoder.encodeVectorLayer(arr, layer, resolution);\n};\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer, url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer The layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, layer, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    /** @type {Object} */ (url_url.searchParams).forEach((value, key) => {\n      customParams[key] = value;\n    });\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: this.getOpacityOrInherited_(layer),\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: this.getOpacityOrInherited_(layer),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer, source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n/**\n * Return an opacity value for the specified layer.\n * @param {ol.layer.Base} layer Layer.\n * @returns {number} opacity Opacity value.\n * @private\n */\nexports.prototype.getOpacityOrInherited_ = function(layer) {\n  if (layer.get('inheritedOpacity') !== undefined) {\n    return layer.get('inheritedOpacity');\n  }\n  return layer.getOpacity();\n};\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport {active} from 'ngeo/utils.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(document.body, 'keydown',\n      this.handleCancelKeyEvent_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(document.body, 'keydown',\n      this.handleCancelKeyEvent_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\nexports.Controller_.prototype.handleCancelKeyEvent_ = function() {\n  olEvents.listen(document.body, 'keydown', (event) => {\n    const escPressed = event.keyCode === 27; // Escape key\n    if (!active.mousedown && escPressed && this.selectedFeature) {\n      this.selectedFeature = null;\n      this.scope_.$apply();\n    }\n  });\n};\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.hasError = false;\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file, (success) => {\n      if (!success) {\n        this.hasError = true;\n      }\n    });\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return ele !== null ? `${Math.round(ele)} m` : '';\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        // Get min/max values (extent) of each lines.\n        for (const name in linesConfiguration) {\n          const extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          // only include defined extent\n          if (extent.every(Number.isFinite)) {\n            elevationsValues = elevationsValues.concat(extent);\n          }\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)))\n          .defined(d => linesConfiguration[name].zExtractor(d) !== null);\n\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      if (Number.isFinite(elevation)) {\n        elevations.push(elevation);\n        elevationsRef[lineName] = elevation;\n        g.select(`.y.grid-hover.${lineName}`)\n          .style('display', 'inline')\n          .select('line')\n          .attr('x1', x(0))\n          .attr('y1', y(elevation))\n          .attr('x2', width)\n          .attr('y2', y(elevation));\n      } else {\n        // no data for this line: hide it\n        g.select(`.y.grid-hover.${lineName}`)\n          .style('display', 'none');\n      }\n    }\n\n    const y2 = y(Math.max.apply(null, elevations));\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', Number.isFinite(y2) ? y2 : 0);\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      const text = elevations[0] === null ? 'no value' : formatter.yhover(elevations[0], 'm');\n      g.select('.y.grid-hover text')\n        .text(text)\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef, yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return [`translate(${x(pe.dist(d))},${y(pe.z(d)) - 10})`];\n        } else {\n          return [`translate(${x(pe.dist(d))},${y(pe.z(d)) - 20}) rotate(${poiLabelAngle})`];\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl : 'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits, elevationsRef, yUnits) {\n  // Update information point.\n  const coordinate = [point.x, point.y];\n\n  this.currentPoint.elevations = elevationsRef;\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A text formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const separator = '&nbsp;: ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  const value = number(this.currentPoint.distance, DistDecimal);\n  innerHTML.push(`${this.profileLabels_.xAxis} ${separator} ${value}&nbsp;${this.currentPoint.xUnits}`);\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = gettextCatalog.getString(elevationName);\n    const int_value = this.currentPoint.elevations[elevationName];\n    const value = int_value === null ?\n      gettextCatalog.getString('no value') :\n      `${number(int_value, 0)}&nbsp;${this.currentPoint.yUnits}`;\n    innerHTML.push(`${translatedElevationName} ${separator} ${value}`);\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the styler value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {object} The object representation of the style.\n * @export\n */\nexports.Controller_.prototype.getStyle = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return {};\n  }\n  return {\n    'color': lineConfiguration.color || '#F00'\n  };\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values'] && item['values'][layerName]) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return null;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-layersconfig=\"::mainCtrl.elevationLayersConfig\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue}}\n *      </span>\n *\n *  For value in meter `elevationLayersConfig` can be an empty object, complex example:\n *\n *      elevationLayersConfig = {\n *          '<layer>': {\n *              'filter': 'ngeoUnitPrefix',\n *              'args': ['m²', 'square'],\n *              'postfix': '<notice>',\n *              'separator': ''\n *          }\n *      };\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {Object.<string, gmf.raster.component.LayerConfig>} gmf-elevation-layersconfig Elevation layer configurations.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'layersconfig': '=gmfElevationLayersconfig',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {!gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, $filter, ngeoDebounce, gmfRaster, gettextCatalog) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {!Object.<string, gmf.raster.component.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  const value = resp[this.layer];\n  if (value !== undefined && value !== null) {\n    const options = this.layersconfig[this.layer] || {};\n    const filter = options.filter || 'number';\n    const custom_args = options.args || [];\n    const postfix = options.hasOwnProperty('postfix') ? options.postfix : 'm';\n    const separator = postfix.length > 0 ?\n      (options.hasOwnProperty('separator') ? options.separator : '\\u00a0') : '';\n    const args = Array.prototype.concat([value], custom_args);\n    this.elevation = this.filter_(filter)(...args) + separator + postfix;\n  } else {\n    const gettextCatalog = this.gettextCatalog;\n    this.elevation = gettextCatalog.getString('No value');\n  }\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-layersconfig=\"::mainCtrl.elevationLayersConfig\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'layersconfig': '=gmfElevationwidgetLayersconfig',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {!Object.<string, gmf.raster.component.LayerConfig>}\n   * @private\n   */\n  this.layersconfig;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController', exports.WidgetController_);\n\n/**\n * @typedef {{\n *     filter: (string|undefined),\n *     args: (Array.<string>|undefined),\n *     postfix: (string|undefined),\n *     separator: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n/**\n * @typedef {{\n *     useBbox: (boolean|undefined),\n *     label: (Object.<string, boolean>),\n *     params: (Object.<string, Object.<string, string>>)\n * }}\n */\nexports.optionsLegendType;\n\n/**\n * @typedef {{\n *     scaleInput: (boolean|undefined),\n *     legend: (optionsLegendType|undefined)\n * }}\n */\nexports.optionsType;\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    /**\n     * @type optionsLegendType\n     * @private\n     */\n    this.gmfLegendOptions_ = {\n      useBbox: true,\n      label: {},\n      params: {},\n    };\n\n    if ($injector.has('gmfPrintOptions')) {\n      /**\n       * @type optionsType\n       */\n      const options = $injector.get('gmfPrintOptions');\n      if (options.scaleInput) {\n        this.scaleInput = options.scaleInput;\n      }\n      if (options.legend) {\n        Object.assign(this.gmfLegendOptions_, options.legend);\n      }\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n    // Workaround for IE11\n    this.rotationInput_.on('change', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n\n    olEvents.listen(this.map.getView(), 'change:rotation', (event) => {\n      this.updateRotation_(Math.round(olMath.toDegrees(event.target.getRotation())));\n    });\n\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    this.layoutInfo.legend = this.fieldValues['legend'] !== false;\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    if (!this.layoutInfo.attributes) {\n      this.layoutInfo.attributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      this.layoutInfo.attributes.push(attribute.name);\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.updateRotation_(rotation);\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n  /**\n   * Set the current rotation value.\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  updateRotation_(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n  }\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {};\n\n    if (this.layoutInfo.attributes.indexOf('datasource') >= 0) {\n      customAttributes['datasource'] = datasource;\n    }\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const center = this.map.getView().getCenter();\n      const deltaX = this.paperSize_[0] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const deltaY = this.paperSize_[1] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const bbox = [\n        center[0] - deltaX,\n        center[1] - deltaY,\n        center[0] + deltaX,\n        center[1] + deltaY,\n      ];\n      const legend = this.getLegend_(scale, this.layoutInfo.dpi, bbox);\n      if (legend !== null) {\n        customAttributes['legend'] = legend;\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              {opacity: ol_layers.opacity}\n            );\n            layer.setZIndex(-200);\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @param {number} dpi The DPI.\n   * @param {Array.number} bbox The bbox.\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale, dpi, bbox) {\n    const legend = {'classes': []};\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      const classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          const layerName = `${layer.get('layerNodeName')}`;\n          let icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          const layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            let icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale, undefined, undefined, undefined, source.serverType_, dpi,\n                this.gmfLegendOptions_.useBbox ? bbox : undefined,\n                this.map.getView().getProjection().getCode(),\n                this.gmfLegendOptions_.params[layer.getSource().serverType_]\n              );\n            }\n            const type = icons ? 'image' : source.serverType_;\n\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push(Object.assign({\n                'name': this.gmfLegendOptions_.label[type] === false ? '' :\n                  gettextCatalog.getString(name),\n                'icons': [icons]\n              }, type === 'qgis' ? {\n                'dpi': dpi,\n              } : {}));\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils, {active} from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Angular injector service.\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $injector, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!angular.$injector}\n   * @private\n   */\n  this.injector_ = $injector;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0],\n        tolerance: this.injector_.has('ngeoSnappingTolerance') ? this.injector_.get('ngeoSnappingTolerance') : undefined,\n        source: this.injector_.has('ngeoSnappingSource') ? this.injector_.get('ngeoSnappingSource') : undefined,\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      document.body,\n      'keydown',\n      this.handleEscapeKeyDown_,\n      this\n    )\n  );\n\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n/**\n * Called when escape key is pressed to reset drawing.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleEscapeKeyDown_ = function(event) {\n  const interaction = this.interaction_;\n  const escPressed = event.keyCode === 27; // Escape key\n  if (!active.mousedown && escPressed && interaction.getActive()) {\n    interaction.setActive(false);\n    interaction.setActive(true);\n  }\n};\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport 'jquery-ui-touch-punch';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.desktop.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport 'gmf/controllers/desktop.less';\nimport appBase from '../appmodule.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector) {\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm', 'srtm-partial'];\n\n  /**\n   * @type {Object.<string, gmf.raster.component.LayerConfig>}\n   * @export\n   */\n  this.elevationLayersConfig = {};\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'aster': {color: '#0000A0'},\n    'srtm': {color: '#00A000'},\n    'srtm-partial': {color: '#FF66FF'},\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: ngeoProjEPSG2056,\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: ngeoProjEPSG21781,\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\nexports.module = angular.module('Appdesktop', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n]);\n\nexports.module.value('gmfContextualdatacontentTemplateUrl', 'gmf/contextualdata');\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/contextualdata', require('./contextualdata.html'));\n});\n\nexports.module.controller('DesktopController', exports);\n\nexport default exports;\n","module.exports = \"<table> <tr> <td translate> Swiss grid (LV03) </td> <td> {{coord_21781|ngeoNumberCoordinates:0:'{x} / {y}'}} </td> </tr> <tr> <td translate> Wgs Coord. </td> <td> {{coord_4326|ngeoNumberCoordinates:2:'{y} / {x}'}} </td> </tr> <tr> <td translate> Wgs Coord. DMS </td> <td> {{coord_4326|ngeoDMSCoordinates:0:'{y} {x}'}} </td> </tr> <tr> <td translate> Elevation (SRTM) </td> <td ng-if=srtm> {{srtm | number}} [m] </td> </tr> <tr> <td translate> Elevation (Aster) </td> <td ng-if=aster> {{aster | number}} [m] </td> </tr> </table> <a ng-href=\\\"https://maps.google.ch/?ie=UTF8&ll={{coord_4326_northern}},{{coord_4326_eastern}}&layer=c&cbll={{coord_4326_northern}},{{coord_4326_eastern}}&cbp=12,57.78,,0,8.1\\\" target=_blank>Google StreetView</a> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\" ng-click=\\\"$ctrl.hasError = false\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=input-group> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined || $ctrl.hasError\\\"> <span ng-if=!$ctrl.hasError>{{'Load local file' | translate}}</span> <span ng-if=$ctrl.hasError>{{'Unable to load the file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-layersconfig=ctrl.layersconfig gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue}} <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" ng-style=ctrl.getStyle(name)></i> {{name | translate}} <span ng-if=\\\"ctrl.currentPoint.elevations[name] != null\\\"> {{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </span> </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer gmf-editfeature-closeaftersave=::efsCtrl.closeAfterSave> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{efCtrl.serverErrorType}}<br> {{efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute | translate }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open title=\\\"\\\"> <div class=windowcontainer ng-style=$ctrl.style> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> <div class=content-template-container></div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open> <button class=collapse-button type=button ng-show=::!ctrl.desktop ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=\\\"header ui-draggable-handle\\\"> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr ng-if=::$ctrl.enableEmail> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <div> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </div> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children> <span ng-switch=\\\"layertreeCtrl.node.children && !layertreeCtrl.layer.loading\\\"> <i ng-switch-when=true class=\\\"fa fa-fw gmf-layertree-state\\\"></i> <i ng-switch-when=false class=\\\"fa fa-fw fa-refresh fa-spin\\\"></i> </span> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"[gmfLayertreeCtrl.getNodeState(layertreeCtrl), layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = __webpack_public_path__ + \"crosshair.3aa99e.svg\";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> </div> <div ng-if=!$ctrl.gmfUser.username> <div class=\\\"alert alert-warning\\\" ng-show=$ctrl.infoMessage> <span>{{ $ctrl.infoMessage }}</span> </div> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}